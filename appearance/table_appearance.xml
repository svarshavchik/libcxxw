<appearance>
  <name>table</name>
  <default>theme</default>
  <field>
    <name>header_color</name>
    <descr><![CDATA[
Background color for the header row
]]></descr>
    <type>color_arg</type>
  </field>
  <field>
    <name>adjustable_header_color</name>
    <descr><![CDATA[
Background color for the header row being adjusted.

Header row's temporary background color when a border is being
dragged, when adjustable_column_widths is set
]]></descr>
    <type>color_arg</type>
  </field>
  <field>
    <name>adjustable_header_highlight_color</name>
    <descr><![CDATA[
Highlighted backround color for the border being adjusted
]]></descr>
    <type>color_arg</type>
  </field>
  <field>
    <name>adjustable_header_highlight_width</name>
    <descr><![CDATA[
Width of the adjustable_header_highlight_color.

This must agree with whatever went into
adjustable_header_highlight_color. The highlight_color gets
composited on top of the header_color in a one-pixel tall
pixmap that spans the width of the header row. The highlight_color
gets positioned behind the border being dragged. In order for
the calculations to work out, this must correspond to the
highlight_color (i.e. if the highlight_color is a 4mm wide
gradient, this must be "4"
]]></descr>
    <type>dim_arg</type>
  </field>
  <field>
    <name>drag_horiz_start</name>
    <descr><![CDATA[
Horizontal movement before column dragging starts

Avoids quick errant clicks from dragging columns
]]></descr>
    <type>dim_arg</type>
  </field>
  <field>
    <name>adjust_cursor</name>
    <descr><![CDATA[
Pointer image on top of an adjustable column divider
]]></descr>
    <type>std::string</type>
  </field>
</appearance>
