<!--

Copyright 2019 Double Precision, Inc.
See COPYING for distribution information.

-->

<section id="uixmllayoutlist">
  <title>
    <tag class='attribute'>type</tag>=<quote>list</quote>
    <tag class='element'>layout</tag>s
  </title>

  <blockquote>
    <informalexample>
      <programlisting><![CDATA[
<layout type="list" id="option-list">
  <append_items>

    <!-- ... -->

  </append_items>
</layout>]]></programlisting>
    </informalexample>
  </blockquote>

  <para>
    The contents of a
    <tag class='element'>layout</tag>s with
    <tag class='attribute'>type</tag>=<quote>list</quote>
    specify the <link linkend="listlayoutmanager">list
      layout manager</link> methods that get invoked to
    <methodname>generate</methodname>() its contents.
  </para>

  <section id="uixmllayoutlistcreatecontainer">
    <title>Creating
      <tag class='attribute'>type</tag>=<quote>list</quote>
      <tag class='element'>layout</tag>s</title>

    <para>
      A <tag class='element'>container</tag> with a
      <tag class='attribute'>type</tag>=<quote>list</quote>
      creates a container that uses the
      <link linkend="listlayoutmanager">list layout manager</link>.
    </para>

    <para>
      <filename>uigenerator5.C</filename> is an example of creating
      a list container using a theme file:
    </para>

    <blockquote>
      <title><ulink url="examples/uigenerator5.C">uigenerator5.C</ulink></title>

      <informalexample>
	<programlisting><xi:include href="../examples/uigenerator5.C" parse="text" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
      </informalexample>
    </blockquote>

    <blockquote>
      <title><ulink url="examples/uigenerator5.xml">uigenerator5.xml</ulink></title>

      <informalexample>
	<programlisting><xi:include href="../examples/uigenerator5.xml" parse="text" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
      </informalexample>
    </blockquote>
  </section>

  <section id="uixmllayoutnewlistlayoutmanager">
    <title>Initializing
      <classname>&ns;::w::new_listlayoutmanager</classname>s</title>

    <blockquote>
      <informalexample>
	<programlisting><![CDATA[
<container>
  <name>option-list</name>
  <type>list</type>
  <style>bullet</style>
  <config>
    <height>
      <min_rows>4</min_rows>
      <max_rows>4</max_rows>
    </height>
  </config>
</container>]]></programlisting>
      </informalexample>
    </blockquote>

    <para>
      The optional
      <tag class='element'>style</tag>'s value is
      <quote>highlight</quote> (default) or <quote>bullet</quote>.
    </para>

    <blockquote>
      <informalexample>
	<programlisting><![CDATA[
<config>
  <selection_type>multiple</selection_type>
</config>]]></programlisting>
      </informalexample>
    </blockquote>

    <para>
      An optional
      <tag class='element'>config</tag> element sets non-default values
      of the
      <ulink url="&link-x--w--new-listlayoutmanager;"><classname>&ns;::w::new_listlayoutmanager</classname></ulink>
      that creates the container:
    </para>

    <variablelist>
      <varlistentry>
	<term><tag class='element'>selection_type</tag></term>
	<listitem>
	  <para>
	    Sets the
	    <classname>&ns;::w::new_listlayoutmanager</classname>'s
	    <varname>selection_type</varname>:
	  </para>
	  <blockquote>
	    <informalexample>
	      <programlisting><![CDATA[
<config>
  <selection_type>multiple</selection_type>
</config>]]></programlisting>
	    </informalexample>
	  </blockquote>

	  <para>
	    The value of a <tag class='element'>selection_type</tag>
	    is one of:
	    <quote>single</quote>,
	    <quote>single_optional</quote>,
	    <quote>multiple</quote>, or
	    <quote>no</quote>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><tag class='element'>height</tag></term>
	<listitem>
	  <para>
	    This element invokes one of
	    <classname>&ns;::w::new_listlayoutmanager</classname>'s
	    overloaded
	    <methodname>height</methodname>() methods:
	  </para>
	  <blockquote>
	    <informalexample>
	      <programlisting><![CDATA[
<config>
  <height>
    <min_rows>4</min_rows>
    <max_rows>4</max_rows>
  </height>
</config>]]></programlisting>
	    </informalexample>
	  </blockquote>

	  <para>
	    Specifies the list height in the range of a minimum and
	    maximum number of rows, calculated using the default list font's
	    height.
	  </para>

	  <blockquote>
	    <informalexample>
	      <programlisting><![CDATA[
<config>
  <height>
    <variable />
  </height>
</config>]]></programlisting>
	    </informalexample>
	  </blockquote>

	  <para>
	    Invokes <methodname>variable_height</methodname>() method.
	  </para>

	  <blockquote>
	    <informalexample>
	      <programlisting><![CDATA[
<config>
  <height>
    <min>list-min</min>
    <preferred>list-preferred</preferred>
    <max>list-max</max>
  </height>
</config>]]></programlisting>
	    </informalexample>
	  </blockquote>

	  <para>
	    A <tag class='element'>height</tag> element with an
	    &dimaxisargvalue;
	    invokes <methodname>height</methodname>() with this
	    explicit value.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><tag class='element'>horizontal_scrollbar</tag> and
	  <tag class='element'>vertical_scrollbar</tag></term>
	<listitem>
	  <para>
	    These elements
	    initialize the corresponding
	    <classname>&ns;::w::new_listlayoutmanager</classname>
	    members:
	  </para>
	  <blockquote>
	    <informalexample>
	      <programlisting><![CDATA[
<config>
  <vertical_scrollbar>always</vertical_scrollbar>
</config>]]></programlisting>
	    </informalexample>
	  </blockquote>

	  <para>
	    The
	    <tag class='element'>horizontal_scrollbar</tag> and
	    <tag class='element'>vertical_scrollbar</tag>
	    elements contain &scrollbar_visibilityvalue;s.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <tag class='element'>appearance</tag>
	</term>
	<listitem>
	  <para>
	    Sets the
	    <classname>&ns;::w::new_listlayoutmanager</classname>'s
	    <varname>appearance</varname> value:
	  </para>
	  <blockquote>
	    <informalexample>
	      <programlisting><![CDATA[
<config>
  <appearance>options</appearance>
</config>

<appearance id="options" type="list">

  <!-- ... -->

</appearance>]]></programlisting>
	    </informalexample>
	  </blockquote>

	  <para>
	    The value of the element specifies an
	    <link linkend="uixmlappearance"><tag class='element'>appearance</tag></link>
	    object of <tag class='attribute'>type</tag>=<quote>list</quote>.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <tag class='element'>configure_for_pane</tag>
	</term>
	<listitem>
	  <para>
	    This configures the list
	    (or a <link linkend="uixmllayoutnewtablelayoutmanager">table</link>)
	    in a
	    <link linkend="uixmlfactorypane">pane container</link>.
	    An optional
	    <tag class='emptytag'>synchronized</tag> flag indicates that
	    the new list/table's columns are synchronized with another
	    list/table in the same pane container.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>

    <para>
      The
      <tag class='element'>config</tag> element shares
      additional common settings with
      <link linkend="uixmllayoutnewcomboboxlayoutmanager">
	<classname>&ns;::w::new_standard_comboboxlayoutmanager</classname>
	and
	<classname>&ns;::w::new_editable_comboboxlayoutmanager</classname>
      </link>:
    </para>
    &uixmllayoutnewlistcombobox;
  </section>
</section>

<!--
Local Variables:
mode: sgml
sgml-parent-document: ("uixmldoc.xml" "appendix" "section")
End:
-->
