<!--

Copyright 2018 Double Precision, Inc.
See COPYING for distribution information.

-->

<chapter id="fontcolorpickers">
  <title>Font and color pickers</title>

  <informaltable frame="none" tabstyle="plain">
    <tbody cols="2">
      <tr>
	<td>
	  <para>
	    A &factory;'s <methodname>create_font_picker()</methodname> and
	    <methodname>create_color_picker()</methodname> methods create
	    interactive popups for entering
	    the values of an
	    <ulink url="&link-x--w--font;"><classname>&ns;::w::font</classname></ulink>
	    and
	    <ulink url="&link-x--w--rgb;"><classname>&ns;::w::rgb</classname></ulink>.
	  </para>

	  <para>
	    The font picker appears as a name of a system font, the current
	    font. The color picker appears as a small colored rectangle.
	    A button next to the picker opens a popup with more details.
	  </para>
	</td>
	<td>
	  <?dbhtml-include href="fontcolorpickers.inc.html"?>
	</td>
      </tr>
    </tbody>
  </informaltable>

  <blockquote>
    <title><ulink url="examples/fontcolorpickers.C">fontcolorpickers.C</ulink></title>

    <informalexample>
      <programlisting><xi:include href="../examples/fontcolorpickers.C" parse="text" xmlns:xi="http://www.w3.org/2001/XInclude" /></programlisting>
    </informalexample>
  </blockquote>

  <section id="createfontcolorpicker">
    <title>Creating font and color pickers</title>

    <para>
      A &factory;'s <methodname>create_font_picker</methodname>() takes a
      <ulink url="&link-x--w--font-picker-config;"><classname>&ns;::w::font_picker_config</classname></ulink>
      parameter that sets the properties of the new font picker,
      returning a new
      <ulink url="&link-typedef-x--w-font-picker;"><classname>&ns;::w::font_picker</classname></ulink>
      widget.
      <methodname>create_color_picker</methodname>() takes a
      <ulink url="&link-x--w--color-picker-config;"><classname>&ns;::w::color_picker_config</classname></ulink>
      parameter that sets the properties of the new color picker,
      returning a new
      <ulink url="&link-typedef-x--w-color-picker;"><classname>&ns;::w::color_picker</classname></ulink>
      widget.
    </para>
  </section>

  <section id="fontpicker">
    <title>Using the font picker</title>

    <para>
      <link linkend="fontcolorpickers"><filename>fontcolorpickers.C</filename></link>
      summarizes how to use a
      <ulink url="&link-typedef-x--w-font-picker;"><classname>&ns;::w::font_picker</classname></ulink>
      widget. This widget provides a popup for selecting
      the most common font options of the
      <ulink url="&link-x--w--font;"><classname>&ns;::w::font</classname></ulink>.
    </para>

    <para>
      <ulink url="&link-typedef-x--w-font-picker;"><classname>&ns;::w::font_picker</classname></ulink>'s
      overloaded
      <methodname>current_font</methodname>() method
      gives the most recently selected font and its options, or resets the
      font picker's options from the specified
      <classname>&ns;::w::font</classname>'s.
      <methodname>on_font_update</methodname>() installs a &callback;
      that gets invoked whenever a new font gets officially picked, by
      the popup's <quote>Ok</quote> button. Only one callback can be
      installed at one time, and the initial callback is one of the
      values that are specified in
      <ulink url="&link-x--w--font-picker-config;"><classname>&ns;::w::font_picker_config</classname></ulink>
      when creating the font picker.
    </para>

    <para>
      The font picker lists all available font families in alphabetical
      order. An optional list of <quote>most recently used</quote> fonts
      appears first, and provides a convenient way to find often use fonts.
      <ulink url="&link-x--w--font-picker-group-id;"><classname>&ns;::w::font_picker_group_id</classname></ulink>
      represents a font family, and the list of most recently used fonts
      is just a <classname>std::vector</classname> of them.
    </para>

    <para>
      The most recently used font list requires the application to install
      an <methodname>on_font_update</methodname>() &callback;. The callback
      controls how many most recently used fonts appear first. This callback
      can be installed after creating the font picker, or by setting it in the
      <classname>&ns;::w::font_picker_config</classname>.
      The first two parameters to the callback are the picked
      <ulink url="&link-x--w--font-picker-group-id;"><classname>&ns;::w::font_picker_group_id</classname></ulink>,
      in addition to the picked <classname>&ns;::w::font</classname>.
      The application has complete control over the most recently used
      vector, and how big it is. As
      <link linkend="fontcolorpickers"><filename>fontcolorpickers.C</filename></link>
      demonstrates, the callback retrieves the vector of the most recently used
      fonts from the font picker, updates it, and installs the updated
      <methodname>most_recently_used</methodname>() vector.
    </para>

    <para>
      The initial list of most recently used fonts gets tentatively specified in
      the <ulink url="&link-x--w--font-picker-config;"><classname>&ns;::w::font_picker_config</classname></ulink>
      when creating the font picker.
      The final list of most recently used fonts, in the new widget, may
      differ for the following reasons.
    </para>

    <itemizedlist>
      <listitem>
	<para>
	  Current system's font availability.
	</para>
      </listitem>

      <listitem>
	<para>
	  Previously used and restored most recently used font settings.
	  Setting <varname>name</varname> in the
	  <classname>&ns;::w::font_picker_config</classname> assigns a unique
	  label (in its window) that identifies the font picker's configuration
	  which gets automatically saved when the main window gets closed;
	  then gets automatically loaded the next time the main window gets
	  opened.
	</para>
      </listitem>
    </itemizedlist>

    <para>
      The final list of the font picker's most recently used fonts comes from
      the widget's overloaded
      <methodname>most_recently_used</methodname>() method. It either returns
      the current list of most recently used fonts, or sets the new list,
      updating the font picker popup accordingly.
    </para>
  </section>


  <section id="colorpicker">
    <title>Using the color picker</title>

    <para>
      <link linkend="fontcolorpickers"><filename>fontcolorpickers.C</filename></link>
      summarizes how to use a
      <ulink url="&link-typedef-x--w-color-picker;"><classname>&ns;::w::color_picker</classname></ulink>
      widget. This widget provides a popup for selecting
      the red, green, and blue channels of a
      <ulink url="&link-x--w--rgb;"><classname>&ns;::w::rgb</classname></ulink>.
      The popup ignores the alpha channel component.
    </para>

    <para>
      <ulink url="&link-typedef-x--w-color-picker;"><classname>&ns;::w::color_picker</classname></ulink>'s
      overloaded
      <methodname>current_color</methodname>() method
      returns the most recently-selected
      <classname>&ns;::w::rgb</classname> color, or resets the popup
      with the specified color.
      <methodname>on_color_update</methodname>() installs a &callback;
      that gets invoked whenever a new color gets officially picked, by
      the popup's <quote>Ok</quote> button. Only one callback can be
      installed at one time, and the initial callback is one of the
      values that are specified in
      <ulink url="&link-x--w--color-picker-config;"><classname>&ns;::w::color_picker_config</classname></ulink>
      when creating the color picker.
    </para>

    <para>
      The same approach that gets used to save and restore the font picker's
      settings also gets used with the color picker.
      Each color picker has a unique identifier, or a label.
      <classname>&ns;::w::color_picker_config</classname>'s
      <varname>name</varname> specifies its unique label.
    </para>
  </section>
</chapter>
<!--
Local Variables:
mode: sgml
sgml-parent-document: ("book.xml" "book" "chapter")
End:
-->
