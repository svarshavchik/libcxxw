<!--

Copyright 2014-2018 Double Precision, Inc.
See COPYING for distribution information.

-->

<preface id="index">
  <title>&app;</title>
  <section id="intro">
    <title>Introduction</title>

    <para>
      &appshort; is an optional add-on library to &libcxx; that
      implements an X widget toolkit with a modern C++20 API.
      &appshort; aims to make it possible to implement a
      basic, no-frills X user interface in modern C++.
      This short demo gives a brief overview of &appshort;'s X widget
      toolkit implementation:
    </para>
    <?dbhtml-include href="demoreel.inc.html"?>

    <para>
      &appshort;'s notable features:
    </para>

    <itemizedlist>
      <listitem>
	<para>
	  This is an independent X widget toolkit stack, from the ground up. The
	  only dependencies are low-level
	  libraries that are not tied to any particular desktop environment.
	  See <xref linkend="INSTALL" /> for more information.
	</para>
      </listitem>

      <listitem>
	<para>
	  &appshort; shows a clean modern look with classical, traditional UI
	  widgets drawn with a subtle, non-intrusive 3D effect from mild
	  gradient shading.
	  Traditional UI widgets include
	  labels, checkboxes, radio buttons, input fields,
	  lists, combo-boxes, menus, and dialogs &mdash; updated to modern
	  UI standards: <link linkend="passwordfields">confirming the last
	    character typed into a
	    password field</link> before masking it, predictive selection of
	  combo-box entries, <link linkend="spininput">spin buttons</link>
	  for numerical input fields, etc...
	</para>
      </listitem>

      <listitem>
	<para>
	  &appshort; implements natural support for bi-directional text input
	  (&larr; and &rarr; keys don't switch direction in the middle of
	  right-to-left text, for example).
	</para>
      </listitem>

      <listitem>
	<para>
	  It's possible to create widgets
	  <link linkend="uigenerator">using an <acronym>XML</acronym>
	    stylesheet</link> that supports the majority of the C++ library
	  API; then adjust the widgets' visual appearance by editing
	  the stylesheet, without recompiling the code.
	</para>
      </listitem>

      <listitem>
	<para>
	  All widgets have full
	  keyboard navigation, where possible. No explicit application
	  support is needed. Even scroll-bars have keyboard controls.
	</para>
      </listitem>

      <listitem>
	<para>
	  Takes full advantage of modern C++20 language features. Lambdas
	  handle UI events (button clicks, menu selections, and other
	  activity). Variant types provide compact means for
	  selecting alternative options. Concepts and constraints assist
	  the compiler with issuing clear diagnostics.
	  All widgets are reference-counted objects.
	</para>
      </listitem>

      <listitem>
	<para>
	  Fully scalable and themeable widgets use a
	  <link linkend="sxg">library-specific
	    scalable graphic format</link>, to fractionally scale the widgets
	  to a targeted size.</para>
      </listitem>

      <listitem>
	<para>
	  &appshort; does not force the application to use an event-driven
	  design. unlike other widget toolkits.
	  The library's internal execution thread handles
	  &xproto; events. The application's UI remains responsive to X
	  events, while the main application runs a
	  long-running task (with all pointer and button activity blocked).
	</para>
      </listitem>

      <listitem>
	<para>
	  &appshort;'s installation configuration solves common ABI
	  issues with C++based libraries. It's possible to run,
	  <emphasis>and build</emphasis> code that uses multiple versions of
	  &appshort;.
	</para>
      </listitem>
    </itemizedlist>

    <para>
      &app; is free software, distributed under the terms of the
      <link linkend="COPYING">GPL, version 3</link>.
    </para>

    <section id="status">
      <title>Status</title>

      <para>
	&app;'s core functionality is complete, and
	<link linkend="INSTALL">is available for downloading</link>.
	New API features in the most recent version:
      </para>

      <itemizedlist>
	<listitem>
	  <para>
	    <link linkend="cxxwcreator.1"><command>cxxwcreator</command></link>
	    support for all <link linkend="uixmldoc">theme UI</link> features.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Improved <link linkend="validatedinput">input field
	      validation</link> abstraction layer.
	  </para>
	</listitem>
      </itemizedlist>
    </section>
  </section>

  &install;

</preface>

<!--
Local Variables:
mode: sgml
sgml-parent-document: ("book.xml" "book" "preface")
End:
-->
