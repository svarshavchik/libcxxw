<!--

Copyright 2021 Double Precision, Inc.
See COPYING for distribution information.

-->

<chapter id="bidi">
  <title>Bi-directional text</title>

  <para>
    &appshort; displays bi-directional text and provides several means for
    controlling how bi-directional text gets displayed.
  </para>

  <para>
    A <link linkend="labels">text label</link>'s primary direction gets
    set from its default Unicode bi-directional rendering order.
    Use the
    <ulink url="&link-x--w--label-config;"><classname>&ns;::w::label_config</classname></ulink>'s
    optional <ulink url="&link-enum-x--w-bidi;"><classname>&ns;::w::bidi</classname></ulink>
    <varname>direction</varname> to explicitly override
    a label's rendering direction, when necessary.
  </para>

  <para>
    <link linkend="inputfields">Input fields</link>' rendering direction
    gets set the same way. Use
    <ulink url="&link-x--w--input-field-config;"><classname>&ns;::w::input_field_config</classname></ulink>'s
    <ulink url="&link-enum-x--w-bidi;"><classname>&ns;::w::bidi</classname></ulink>
    <varname>direction</varname> to explicitly override
    the input field's rendering direction.
  </para>

  <section id="bidiinput">
    <title>Bi-directional text input</title>

    <para>
      Bi-directional text placed into an
      <link linkend="inputfields">input fields</link> loses all of its
      original isolation and override markers (if any). Its original Unicode
      Unicode isolation and override markers get applied as part of
      interpreting the bi-directional text's appearance. The
      resulting bi-directional text gets edited directly, with its
      isolation and override markers stripped off.
    </para>

    <para>
      Retrieved contents of the input field may or may not include
      replacement markers, depending on the requested
      <ulink url="&link-enum-x--w-bidi-format;"><classname>&ns;::w::bidi_format</classname></ulink>
      <varname>directional_format</varname>.
      <function>get</function>() and <function>get_unicode</function>()
      use this
      <ulink url="&link-x--w--input-field-config;"><classname>&ns;::w::input_field_config</classname></ulink>, setting by default. An optional
      <classname>&ns;::w::bidi_format</classname> parameter
      <function>get</function>() and <function>get_unicode</function>()
      overrides this default.
    </para>

    <para>
      Input field <link linkend="searchinputthread">search callback
	threads</link>
      have their
      <classname>&ns;::w::bidi_format</classname> come from the
      input field's
      <ulink url="&link-x--w--input-field-config--search-info;"><varname>input_field_search</varname></ulink>'s
      <varname>search_format</varname>.
      The default
      <varname>search_format</varname> value is <literal>none</literal>.
    </para>

    <para>
      New direction of text entered into an input field comes from each
      character's default rendering direction.
      <keycap>Alt</keycap>-<keycap>Cursor-Left</keycap> and
      <keycap>Alt</keycap>-<keycap>Cursor-Right</keycap> override the
      default rendering direction of the typed in text going forward.
      Pressing the same key combination turns off the directional override.
      A small tooltip is displayed while text direction override is in effect:
    </para>

    <mediaobject>
      <imageobject>
	<imagedata fileref="bidi_input.png" format="PNG"
		   contentwidth="420px" contentdepth="213px" />
      </imageobject>
      <textobject>
	<phrase>
	  Bi-directional text input
	</phrase>
      </textobject>
      <caption>
	<para>
	  In this example the normal text was typed in first, then the
	  cursor got backed up to the open parenthesis; then
	  <keycap>Alt</keycap>-<keycap>Cursor-Left</keycap>
	  followed by <quote>Hello world</quote>.
	</para>
      </caption>
    </mediaobject>
  </section>
</chapter>
<!--
Local Variables:
mode: sgml
sgml-parent-document: ("book.xml" "book" "chapter")
End:
-->
